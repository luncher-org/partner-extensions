{"version":3,"file":"nutanix-1.1.1.umd.min.machine-config.js","mappings":"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","sources":["webpack://nutanix-1.1.1/./.shell/assets/brand/ sync ^\\.\\/.*\\/metadata\\.json$","webpack://nutanix-1.1.1/./nutanix.ts","webpack://nutanix-1.1.1/./machine-config/nutanix.vue","webpack://nutanix-1.1.1/./machine-config/nutanix.vue?c995","webpack://nutanix-1.1.1/./machine-config/nutanix.vue?b4e4","webpack://nutanix-1.1.1/./machine-config/nutanix.vue?f091"],"sourcesContent":["var map = {\n\t\"./classic/metadata.json\": 9621,\n\t\"./csp/metadata.json\": 6471,\n\t\"./federal/metadata.json\": 1862,\n\t\"./harvester/metadata.json\": 1507,\n\t\"./rgs/metadata.json\": 8401,\n\t\"./suse/metadata.json\": 7259\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1177;","import { isArray } from \"lodash\";\n\ntype Options = {\n  value: any;\n  api: string;\n  field: string;\n  mapper?: Function;\n  filter?: Function;\n  initial?: string;\n  name?: string;\n}\n/**\n * Helper class for dealing with the nutanix API\n */\nexport class Nutanix {\n  public endpoint: string = '';\n  public username: string = '';\n  public password: string = '';\n  public port: string = '';\n  public insecure: boolean = false;\n  public clusterReferenceId: string = '';\n  private credentialID: string = '';\n  private endpoints: any;\n\n  private $dispatch: any;\n\n  constructor($store: any, obj: any) {\n    if (obj.nutanixcredentialConfig) {\n      Object.keys(obj.nutanixcredentialConfig).forEach((key) => {\n        (this as any)[key] = obj.nutanixcredentialConfig[key];\n      });\n      this.credentialID = obj.id;\n    } else {\n      // Copy from options to this\n      Object.keys(obj).forEach((key) => {\n        (this as any)[key] = obj[key];\n      });\n    }\n\n    this.$dispatch = $store.dispatch;\n  }\n\n  public async testConnection() {\n    const baseUrl = `/meta/proxy/${this.endpoint}:${this.port}`;\n    const url = `${baseUrl}/api/clustermgmt/v4.0/config/clusters`;\n    const headers = {\n      Accept: 'application/json',\n      \"X-API-Auth-Header\": 'Basic ' + btoa(this.username + ':' + this.password)\n    };\n\n    try {\n      const res = await this.$dispatch('management/request', {\n        url,\n        headers,\n        method: 'GET',\n        redirectUnauthorized: false,\n      }, { root: true });\n\n      if (res._status === 502) {\n        return { error: 'Could not proxy request - URL may not be in Rancher\\'s allow list' };\n      }\n\n      return res;\n\n    } catch (e) {\n      console.error(e); // eslint-disable-line no-console\n      return { error: e };\n    }\n  }\n\n  public async getClusterList(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: \"/api/clustermgmt/v4.0/config/clusters\",\n      field: 'data',\n      filter: (cluster: any) => cluster.config.hypervisorTypes.includes(\"AHV\"),\n      initial\n    });\n  }\n\n  public async getImages(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/vmm/v4.0/content/images',\n      field: 'data',\n      initial\n    });\n  }\n\n  public async getNetwork(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/networking/v4.0/config/subnets',\n      field: 'data',\n      mapper: async (network: any) => {\n        const vpc = network.subnetType === \"OVERLAY\" ? (await this.getVpc(network.vpcReference)).data : undefined;\n        return {\n          ...network,\n          baseName: network.name,\n          name: network.subnetType === \"OVERLAY\" ? `${network.name} (${vpc.name})` : network.name,\n        }\n      },\n      filter: (network: any) => (network.subnetType == \"OVERLAY\" || network.clusterReference == this.clusterReferenceId) && !network.isExternal,\n      initial\n    });\n  }\n\n  public async getVpc(vpcReference: string) {\n    return await this.makeComputeRequest(`/api/networking/v4.0/config/vpcs/${vpcReference}`);\n  }\n\n  public async getStorageContainer(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/clustermgmt/v4.0/config/storage-containers',\n      field: 'data',\n      filter: (storage: any) => storage.clusterExtId == this.clusterReferenceId,\n      initial\n    });\n  }\n\n  public async getCategories(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/prism/v4.0/config/categories',\n      field: 'data',\n      mapper: (categorie: any) => { return { ...categorie, name: `${categorie.key}=${categorie.value}` } },\n      filter: (categorie: any) => categorie.key !== \"Project\",\n      initial\n    });\n  }\n\n  public async getProjectsName(value: any, initial?: string) {\n    return await this.getOptions({\n      value,\n      api: '/api/nutanix/v3/projects/list',\n      field: 'entities',\n      mapper: (project: any) => { return { ...project, name: `${project.spec.name}` } },\n      initial\n    });\n  }\n\n  // public async getNetworkNames(value: any, initial?: string) {\n  //   return await this.getOptions(value, '/os-tenant-networks', 'networks', (network: any) => {\n  //     return {\n  //       ...network,\n  //       name: network.label\n  //     };\n  //   }, initial);\n  // }\n\n  private async constructTotalResponse(apiPath: string, initialDataLength: number, total: number) {\n    const pageCount = Math.ceil(total / initialDataLength);\n    const data = [];\n    for (let i = 1; i < pageCount; i++) {\n      const nextPageResponse = await this.makeComputeRequest(`${apiPath}?$page=${i}`);\n      data.push(...nextPageResponse.data);\n    }\n\n    return data;\n  }\n\n  private async constructProjectTotalResponse(apiPath: string, initialDataLength: number, total: number) {\n    const pageCount = Math.ceil(total / initialDataLength);\n    const entities = [];\n    for (let i = 1; i < pageCount; i++) {\n      const nextPageResponse = await this.makeComputeRequest(`${apiPath}?$page=${i}`, 'POST');\n      entities.push(...nextPageResponse.entities);\n    }\n\n    return entities;\n  }\n\n  public async getOptions(options: Options) {\n    const { value, api, mapper, filter, initial, field } = options;\n    // We are fetching the data for the options\n    value.busy = true;\n    value.enabled = true;\n    value.selected = isArray(value.selected) ? [] : '';\n\n    let res;\n\n    if (api === '/api/nutanix/v3/projects/list') {\n      res = await this.makeComputeRequest(api, 'POST');\n      const total = res?.metadata?.total_matches ?? 0;\n      const pageCount = res?.entities?.length ?? 0;\n      if (pageCount < total) {\n        const entities = await this.constructProjectTotalResponse(api, pageCount, total);\n        res.entities = [...res.entities, ...entities];\n      }\n    }\n    else {\n      res = await this.makeComputeRequest(api);\n      const total = res?.metadata?.totalAvailableResults ?? 0;\n      const pageCount = res?.data?.length ?? 0;\n\n      if (pageCount < total) {\n        const data = await this.constructTotalResponse(api, pageCount, total);\n        res.data = [...res.data, ...data];\n      }\n    }\n\n    if (res && (res as any)[field]) {\n      let list = (res as any)[field] || [];\n\n      if (filter) {\n        list = list.filter((k: any) => filter(k));\n      }\n\n      if (mapper) {\n        list = await Promise.all(list.map(async (k: any) => await mapper(k)));\n      }\n\n      value.options.forEach((selected: any) => { list.push(selected) });\n\n      value.options = this.convertToOptions(list);\n      value.busy = false;\n\n      if (value.options.length < list.length) {\n        const unique = list.filter((obj: any, index: any) => {\n          return index !== list.findIndex((o: any) => obj.name === o.name);\n        });\n        value.duplicates = unique;\n      }\n\n      if (initial) {\n        const found = value.options.find((option: any) => option.value.name === initial);\n\n        if (found) {\n          value.selected = found.value;\n        }\n      }\n\n    } else {\n      value.options = [];\n      value.selected = isArray(value.selected) ? [] : null;\n      value.busy = false;\n      value.enabled = false;\n    }\n  }\n\n  public async makeComputeRequest(api: string, method: string = 'GET') {\n    const baseUrl = `/meta/proxy/${this.endpoint}:${this.port}`;\n    const url = `${baseUrl}${api}`;\n\n    const headers = {\n      Accept: 'application/json',\n      \"Content-Type\": 'application/json',\n      \"X-API-Auth-Header\": 'Basic ' + btoa(this.username + ':' + this.password),\n    };\n\n    try {\n      const res = await this.$dispatch('management/request', {\n        url,\n        headers,\n        method: method,\n        data: JSON.stringify({}),\n        redirectUnauthorized: false,\n      }, { root: true });\n\n      return res;\n    } catch (e) {\n      console.error(e); // eslint-disable-line no-console\n    }\n  }\n\n\n  private convertToOptions(list: any) {\n    const unique = list.filter((obj: any, index: any) => {\n      return index === list.findIndex((o: any) => obj.name === o.name);\n    });\n\n    const sorted = (unique || []).sort((a: any, b: any) => a.name.localeCompare(b.name));\n\n    return sorted.map((p: any) => {\n      return {\n        label: p.name,\n        value: p\n      };\n    });\n  }\n}\n","<script>\nimport Loading from '@shell/components/Loading';\nimport { Banner } from '@components/Banner';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect.vue';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport CodeMirror from '@shell/components/CodeMirror.vue';\nimport Collapse from '@shell/components/Collapse.vue';\nimport Checkbox from '@shell/rancher-components/Form/Checkbox/Checkbox.vue';\nimport RadioGroup from \"@components/Form/Radio/RadioGroup\";\n\nimport { NORMAN, SECRET } from '@shell/config/types';\nimport { stringify } from '@shell/utils/error';\nimport { _CREATE, _EDIT, _VIEW } from '@shell/config/query-params';\n\nimport { Nutanix } from '../nutanix.ts';\nimport UnitInput from \"@shell/components/form/UnitInput\";\n\n// this function is used to setup all Select input option\nfunction initOptions(enabled = false, init = null, options = []) {\n  return {\n    options:  options,\n    selected: init,\n    busy:     false,\n    enabled:  enabled,\n    baseOption: null,\n  };\n}\n\n// this function is used to setup all Select input option\nfunction initUnitOptions(enabled = false, init = null, _min = null, _max = null) {\n  return {\n    options: [],\n    selected: init,\n    min: _min,\n    max: _max,\n    busy: false,\n    enabled: enabled,\n    status: \"\",\n    tooltip: \"\",\n  };\n}\n\nexport default {\n  components: {\n    Banner, Loading, KeyValue,\n    LabeledSelect, UnitInput, CodeMirror, Collapse, Checkbox, RadioGroup\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    uuid: {\n      type:     String,\n      required: true,\n    },\n\n    cluster: {\n      type:    Object,\n      default: () => ({})\n    },\n\n    credentialId: {\n      type:     String,\n      required: true,\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n\n    busy: {\n      type:    Boolean,\n      default: false\n    },\n\n    provider: {\n      type:     String,\n      required: true,\n    }\n  },\n  emits: ['validationChanged'],\n\n  async fetch() {\n    if ( !this.credentialId ) {\n      return;\n    }\n\n    this.$emit('validationChanged', false);\n\n    if (this.mode == _CREATE) {\n      this.initAuthentication();\n      return\n    }\n\n    await this.initAuthentication();\n\n    this.clusters.selected = this.clusters.baseOption.filter(e => e.label == this.value.cluster)[0];\n\n    if (this.clusters.selected === undefined) {\n      return;\n    }\n\n    await this.setClusterReferenceId(this.clusters.selected.value);\n\n    this.projectName.selected = this.projectName.options.find((o) => o.value.name === this.value.project)?.value;\n    this.vmCpus.selected = this.value.vmCpus;\n    this.vmCpuPassthrough = this.value.vmCpuPassthrough;\n    this.vmCores.selected = this.value.vmCores;\n    this.vmMem.selected = this.value.vmMem / 1024;\n\n    this.vmImage.selected = this.vmImage.options.find((o) => o.value.name === this.value.vmImage)?.value;\n    this.vmImageSize.selected = this.value.vmImageSize;\n\n    this.networks.selected = this.value.vmNetwork.map(e => this.networks.baseOption.find((o) => o.value.extId === e || o.extId === e || o.label === e));\n    this.filterNetworks();\n    this.bootType = this.value.bootType === \"legacy\" ? \"Legacy\" : \"UEFI\";\n    this.vmCategories.selected = this.value.vmCategories.map(e => this.vmCategories.options.find((o) => o.name === e || o.value?.name === e));\n\n    this.vmSerialPort = this.value.vmSerialPort;\n\n    this.additionalDiskSize.selected = this.value.diskSize;\n\n    if (this.additionalDiskSize.selected !== 0 && this.additionalDiskSize.selected !== null)\n      this.storageContainer.selected = this.storageContainer.options.find((o) => o.value.containerExtId === this.value.storageContainer);\n\n    this.cloudInit = this.value.cloudInit;\n\n    this.$emit('validationChanged', true);\n\n    if (this.mode == _VIEW) {\n      this.mybusy = true;\n    }\n  },\n\n  data() {\n    return this.InitData();\n  },\n\n  // This wath the credentialId selector input to call the fetch above function\n  watch: {\n    'credentialId'() {\n      this.$fetch();\n    },\n    'value'(newVal, oldVal) {\n      const oldCat = oldVal.vmCategories;\n      const oldNetworks = oldVal.vmNetwork;\n\n      if (this.vmCategories.selected.length) {\n        this.value.vmCategories = this.vmCategories.selected[0]?.label === undefined ?\n          this.vmCategories.selected.map(c => c.name) : this.vmCategories.selected.map(c => c.value.name);\n      } else {\n        this.value.vmCategories = [];\n      }\n      const uniqueNetworks =  _.uniq(this.value.vmNetwork);\n      this.value.vmNetwork = [...uniqueNetworks];\n    }\n  },\n  computed: {\n    value() {\n      return this.value;\n    }\n  },\n\n  methods: {\n    stringify,\n\n    async initAuthentication() {\n      let obj = this.InitData();\n      Object.keys(obj).forEach((key) => {\n        (this)[key] = obj[key];\n      });\n\n      try {\n        this.credential = await this.$store.dispatch('rancher/find', { type: NORMAN.CLOUD_CREDENTIAL, id: this.credentialId });\n      } catch (e) {\n        this.credential = null;\n      }\n\n      // Try and get the secret for the Cloud Credential as we need the plain-text password\n      try {\n        const id = this.credentialId.replace(':', '/');\n        const secret = await this.$store.dispatch('management/find', { type: SECRET, id });\n        const data = secret.data['nutanixcredentialConfig-password'];\n        const password = atob(data);\n\n        this.password = password;\n        this.havePassword = true;\n        this.ready = true;\n\n      } catch (e) {\n        this.password = '';\n        this.havePassword = false;\n        console.error(e);\n      }\n\n      this['authenticating'] = true;\n\n      // Create a Nutanix object to do the API calls\n      const os = new Nutanix(this.$store, this.credential);\n      os.password = this.password;\n      this.os = os;\n\n      await this.setConfiguration();\n    },\n\n    InitData() {\n      return {\n        authenticating: false,\n        ready: false,\n        os: null,\n        password: null,\n        havePassword: false,\n        clusters: initOptions(),\n        clusterReferenceId: '',\n\n        // Machine pool configuration\n        projectName: initOptions(true, null, [{ name: \"-- NO PROJECT --\" }]),\n        vmCpus: initUnitOptions(true, \"2\", 2, 128),\n        vmCpuPassthrough: false,\n        vmCores: initUnitOptions(true, \"1\", 1, 128),\n        vmMem: initUnitOptions(true, \"4\", 4, 512),\n        vmImage: initOptions(),\n        vmImageSize: initUnitOptions(true, \"0\", 0, 10000),\n        networks: initOptions(false, []),\n        additionalDiskSize: initOptions(false, 0),\n        storageContainer: initOptions(),\n        is_SC_colapse: false,\n        cloudInit: \"#cloud-config\\n\\n\",\n        vmCategories: initOptions(false, []),\n        vmSerialPort: false,\n        bootType: \"Legacy\",\n\n        // other\n        t: this.$store.getters['i18n/t'],\n        mybusy: false,\n        errors: [],\n      };\n    },\n\n    async setConfiguration() {\n      // Fetch a token - if this succeeds, kick off async fetching the lists we need\n      await this.os.getProjectsName(this.projectName, this.value?.projectName);\n\n      if (!this.projectName.enabled) {\n        this['authenticating'] = false;\n        this.errors.push('Unable to get Nutanix Projects Name');\n        return;\n      }\n\n      await this.os.getClusterList(this.clusters, this.value?.clusterName).then(() => {\n        if (!this.clusters.enabled) {\n          this.errors.push('Unable to get Nutanix cluster');\n        }\n        this.clusters.baseOption = this.clusters.options;\n        this.networks.enabled = false;\n      });\n\n      await this.os.getImages(this.vmImage, this.value?.imageName).then(() => {\n        if (!this.vmImage.enabled) {\n          this.errors.push('Unable to get Nutanix Images');\n        }\n      });\n\n      await this.os.getCategories(this.vmCategories, this.value?.vmCategories).then(() => {\n        if (!this.vmCategories.enabled) {\n          this.errors.push('Unable to get Nutanix vmCategories');\n        }\n      });\n    },\n\n    // This function is call when the cluster selector input change\n    // this allow to dynamically change the network available for this cluster\n    async setClusterReferenceId(e) {\n      this.os.clusterReferenceId = e.extId;\n      this.networks.options = [];\n      this.storageContainer.options = [];\n\n      await this.os.getNetwork(this.networks, this.value?.vmNetwork).then(() => {\n        if (!this.networks.enabled) {\n          this.errors.push('Unable to get Nutanix Network');\n        }\n\n        this.networks.baseOption = this.networks.options;\n\n        if (this.projectName.selected) {\n          let networkIdList = this.projectName.selected.status.resources.subnet_reference_list.map(c => c.uuid);\n          this.networks.options = this.networks.baseOption.filter(network => networkIdList.includes(network.value.extId)); //  || vpcIdList.includes(network.value.extId)\n          this.networks.baseOption = this.networks.options;\n        }\n\n        if (this.networks.options.length === 0) {\n          this.networks.enabled = false;\n        }\n        else {\n          this.networks.enabled = true;\n        }\n      });\n\n      await this.os.getStorageContainer(this.storageContainer, this.value?.storageContainer).then(() => {\n        if (!this.storageContainer.enabled) {\n          this.errors.push('Unable to get Nutanix storageContainer');\n        }\n\n        this.additionalDiskSize.enabled = true;\n      });\n    },\n\n    dynamicProjectName(e) {\n      if (this.projectName.selected?.name == \"-- NO PROJECT --\") {\n        this.projectName.selected = null;\n        this.clusters.options = this.clusters.baseOption;\n      }\n      else {\n        let clusterReferenceIdList = e.status.resources.cluster_reference_list.map(c => c.uuid);\n\n        this.clusters.options = this.clusters.baseOption.filter(c =>\n          clusterReferenceIdList.includes(c.value.extId)\n        );\n      }\n\n      this.clusters.selected = null;\n      this.networks.selected = [];\n      this.networks.enabled = false;\n      this.additionalDiskSize.selected = 0;\n      this.additionalDiskSize.enabled = false;\n      this.storageContainer.selected = null;\n\n      if (this.clusters.options.length === 0) {\n        this.clusters.enabled = false;\n      }\n      else {\n        this.clusters.enabled = true;\n      }\n    },\n\n    // This function is call when the image selector input change\n    dynamicVmImageSize(object) {\n      this.vmImageSize.min = 10.0 + Math.ceil(object.sizeBytes / 1073741824);\n      // if (this.vmImageSize.selected < this.vmImageSize.min)\n      this.vmImageSize.selected = 10.0 + Math.ceil(object.sizeBytes / 1073741824);\n\n      if (this.vmImage?.duplicates?.find(e => e.name === object.name) !== undefined) {\n        this.vmImage.status = \"warning\"\n        this.vmImage.tooltip = this.t('driver.nutanix.config.component.vmImage.duplicates')\n      }\n      else {\n        this.vmImage.status = \"\"\n        this.vmImage.tooltip = \"\"\n      }\n    },\n\n    filterNetworks() {\n      if (this.networks.selected.length !== 0) {\n        if (this.networks.selected[0]?.subnetType)\n          this.networks.options = this.networks.baseOption.filter(\n          (network) =>  {\n            const selectedNetwork = this.networks.selected[0];\n            return (\n              selectedNetwork.subnetType === network.value.subnetType && \n              selectedNetwork.vpcReference === network.value.vpcReference && \n              selectedNetwork.isAdvancedNetworking === network.value.isAdvancedNetworking\n            );\n          }\n        );\n        else {\n          this.networks.selected = this.networks.selected.filter(network => network.value);\n          this.networks.options = this.networks.baseOption.filter(\n            (network) => {\n              const selectedNetwork = this.networks.selected[0];\n              return (\n                selectedNetwork.value.subnetType === network.value.subnetType && \n                selectedNetwork.value.vpcReference == network.value.vpcReference &&\n                selectedNetwork.value.isAdvancedNetworking === network.value.isAdvancedNetworking\n              );\n            }\n          );\n        }\n      } else {\n        this.networks.options = this.networks.baseOption;\n      }\n    },\n\n    // This function is call when the additional disk size input change\n    dynamicStorageContainer(e) {\n      this.additionalDiskSize.selected = e;\n\n      if (this.additionalDiskSize.selected !== 0 && this.additionalDiskSize.selected !== null)\n        this.storageContainer.enabled = true;\n      else\n        this.storageContainer.enabled = false;\n    },\n\n    // This function is call when the user add a wrong tag on a select input multiple\n    labelSelectAddWrongTag(object, component) {\n      component.selected = object?.filter(network => network) || [];\n    },\n\n    // Save all input data is the VUE values\n    syncValue() {\n      // Note: We don't need to provide password as this is picked up via the credential\n\n      // Copy the values from the form to the correct places on the value\n      this.value.cluster = this.clusters.selected?.value?.name ?? this.clusters.selected.name;\n\n      this.value.project = this.projectName.selected?.name == \"-- NO PROJECT --\" ? null : this.projectName.selected?.name;\n      this.value.vmCpus = this.vmCpus.selected.toString();\n      this.value.vmCpuPassthrough = this.vmCpuPassthrough;\n      this.value.vmCores = this.vmCores.selected.toString();\n      this.value.vmMem = (this.vmMem.selected * 1024).toString();\n      this.value.vmImage = this.vmImage.selected?.name;\n      this.value.vmImageSize = this.vmImageSize.selected.toString();\n      const networks = _.uniq(this.networks.selected.map(e => e.extId || e.value.extId));\n      this.value.vmNetwork = networks;\n      this.value.bootType = this.bootType.toLowerCase();\n\n      if (this.vmCategories.selected.length) {\n        this.value.vmCategories = this.vmCategories.selected[0]?.label === undefined ?\n          this.vmCategories.selected.map(c => c.name) : this.vmCategories.selected.map(c => c.value.name);\n      } else {\n        this.value.vmCategories = [];\n      }\n      this.value.vmSerialPort = this.vmSerialPort;\n\n      if (this.additionalDiskSize.selected !== null)\n        this.value.diskSize = this.additionalDiskSize.selected.toString();\n      else\n        this.value.diskSize = this.additionalDiskSize.selected;\n\n      if (this.additionalDiskSize.selected !== 0 && this.additionalDiskSize.selected !== null)\n        this.value.storageContainer = this.storageContainer.selected?.containerExtId;\n\n      this.value.cloudInit = this.cloudInit;\n    },\n\n    // This function is call when the user change the input value\n    // To check if the value is between the min and max\n    validInput(e, value) {\n      value.selected = e;\n\n      if (value.selected < value.min || value.selected > value.max) {\n        value.status = \"error\"\n        value.tooltip = this.t(`driver.nutanix.config.component.vmCpus.tooltip`) + ` (${value.min} - ${value.max})`\n      }\n      else {\n        value.status = \"\"\n        value.tooltip = \"\"\n      }\n    },\n\n    // This function is call every time the user change a value\n    // To check if all the input are valid to activate the \"CREATE\" button\n    canAuthenticate() {\n      if (this.additionalDiskSize.selected !== 0 &&\n        this.additionalDiskSize.selected !== null &&\n        this.storageContainer.selected === \"\") {\n        this.$emit('validationChanged', false);\n        return\n      }\n\n\n      if (!!this.clusters.selected &&\n        !!this.vmCpus.selected &&\n        !!this.vmCores.selected &&\n        !!this.vmMem.selected &&\n        !!this.vmImage.selected &&\n        !!this.vmImageSize.selected &&\n        this.networks.selected.length > 0) {\n        this.$emit('validationChanged', true);\n        return\n      }\n\n      this.$emit('validationChanged', false);\n    },\n\n    // This fonction is call when the user click on the \"CREATE\" and \"Save\" Button\n    test() {\n      this.syncValue();\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Loading\n      v-if=\"$fetchState.pending\"\n      :delayed=\"true\"\n    />\n    <div>\n      <div class=\"nutanix-config\"> <!-- Nutanix loggin status -->\n        <div class=\"title\">\n          {{ t('driver.nutanix.config.title.main') }}\n        </div>\n        <div\n          v-if=\"authenticating && !ready\"\n          class=\"loading\"\n        >\n          <i class=\"icon-spinner icon-spin icon-lg\" />\n          <span>\n            {{ t('driver.nutanix.config.loggin.loading') }}\n          </span>\n        </div> <!-- Loading loggin -->\n        <div\n          v-else-if=\"authenticating && ready\"\n          class=\"loading\"\n        >\n          <i class=\"icon-checkmark icon-lg\" style=\"color: green;\"/>\n          <span>\n            {{ t('driver.nutanix.config.loggin.success') }}\n          </span>\n        </div> <!-- Success loggin -->\n        <div\n          v-else\n          class=\"loading\"\n        >\n          <i class=\"icon-close icon-lg\" style=\"color: red;\"/>\n          <span>\n            {{ t('driver.nutanix.config.loggin.failed') }}\n          </span>\n        </div> <!-- Failed loggin -->\n      </div>\n      <div class=\"row mt-10\"> <!-- Project Name / Cluster -->\n        <div class=\"col span-6\"> <!-- Project Name -->\n          <LabeledSelect\n            v-model:value=\"projectName.selected\"\n            labelKey=\"driver.nutanix.config.component.projectName.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.projectName.placeholder`)\"\n            :options=\"projectName.options\"\n            :disabled=\"!projectName.enabled || mybusy\"\n            :loading=\"projectName.busy\"\n            :searchable=\"false\"\n            @update:value=\"dynamicProjectName($event); canAuthenticate()\"\n          />\n        </div>\n        <div class=\"col span-6\"> <!-- Cluster input -->\n          <LabeledSelect\n            v-model:value=\"clusters.selected\"\n            labelKey=\"driver.nutanix.config.component.cluster.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.cluster.placeholder`)\"\n            :options=\"clusters.options\"\n            :disabled=\"!clusters.enabled || mybusy\"\n            :loading=\"clusters.busy\"\n            :searchable=\"false\"\n            :required=\"true\"\n            @update:value=\"setClusterReferenceId($event); canAuthenticate()\"\n          />\n        </div>\n      </div>\n      <hr class=\"mt-10\">\n      <div class=\"nutanix-config\"> <!-- VM Properties title -->\n        <div class=\"title\">\n          {{ t('driver.nutanix.config.title.properties') }}\n        </div>\n      </div>\n      <div class=\"row mt-10\"> <!-- vmCpus  /  Cores  / vmMem  -->\n        <div class=\"col span-4\"> <!-- vmCpus -->\n          <UnitInput\n            :value=\"vmCpus.selected\"\n            labelKey=\"driver.nutanix.config.component.vmCpus.label\"\n            :suffix=\"t(`driver.nutanix.config.component.vmCpus.suffix`)\"\n            type=\"number\"\n            :disabled=\"!vmCpus.enabled || mybusy\"\n            :loading=\"vmCpus.busy\"\n            :required=\"true\"\n            :min=\"vmCpus.min\"\n            :max=\"vmCpus.max\"\n            @update:value=\"validInput($event, vmCpus); canAuthenticate()\"\n            :status=\"vmCpus.status\"\n            :tooltip=\"vmCpus.tooltip\"\n          />\n          <Checkbox\n            :value=\"vmCpuPassthrough\"\n            :valueWhenTrue=\"true\"\n            labelKey=\"driver.nutanix.config.component.vmCpuPassthrough.label\"\n            style=\"margin-top: 5px;\"\n            @update:value=\"vmCpuPassthrough = !vmCpuPassthrough;\"\n            :disabled=\"mybusy\"\n          />\n        </div>\n        <div class=\"col span-4\"> <!-- Cores -->\n          <UnitInput\n            :value=\"vmCores.selected\"\n            labelKey=\"driver.nutanix.config.component.vmCores.label\"\n            :suffix=\"t(`driver.nutanix.config.component.vmCores.suffix`)\"\n            type=\"number\"\n            :disabled=\"!vmCores.enabled || mybusy\"\n            :loading=\"vmCores.busy\"\n            :required=\"true\"\n            :min=\"vmCores.min\"\n            :max=\"vmCores.max\"\n            @update:value=\"validInput($event, vmCores); canAuthenticate()\"\n            :status=\"vmCores.status\"\n            :tooltip=\"vmCores.tooltip\"\n          />\n        </div>\n        <div class=\"col span-4\"> <!-- vmMem -->\n          <UnitInput\n            :value=\"vmMem.selected\"\n            labelKey=\"driver.nutanix.config.component.vmMem.label\"\n            :suffix=\"t(`driver.nutanix.config.component.vmMem.suffix`)\"\n            type=\"number\"\n            :disabled=\"!vmMem.enabled || mybusy\"\n            :loading=\"vmMem.busy\"\n            :required=\"true\"\n            :min=\"vmMem.min\"\n            :max=\"vmMem.max\"\n            @update:value=\"validInput($event, vmMem); canAuthenticate()\"\n            :status=\"vmMem.status\"\n            :tooltip=\"vmMem.tooltip\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-10\"> <!-- Image  /  VM Disk Size -->\n        <div class=\"col span-6\"> <!-- Image input -->\n          <LabeledSelect\n            v-model:value=\"vmImage.selected\"\n            labelKey=\"driver.nutanix.config.component.vmImage.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.vmImage.placeholder`)\"\n            :options=\"vmImage.options\"\n            :disabled=\"!vmImage.enabled || mybusy\"\n            :loading=\"vmImage.busy\"\n            :searchable=\"false\"\n            :required=\"true\"\n            :status=\"vmImage.status\"\n            :tooltip=\"vmImage.tooltip\"\n            @update:value=\"dynamicVmImageSize($event); canAuthenticate()\"\n          />\n        </div>\n        <div class=\"col span-6\"> <!-- VM Disk Size input -->\n          <UnitInput\n            :value=\"vmImageSize.selected\"\n            labelKey=\"driver.nutanix.config.component.vmImageSize.label\"\n            :suffix=\"t(`driver.nutanix.config.component.vmImageSize.suffix`)\"\n            :min=\"vmImageSize.min\"\n            :max=\"vmImageSize.max\"\n            :disabled=\"!vmImageSize.enabled || mybusy\"\n            :loading=\"vmImageSize.busy\"\n            :required=\"true\"\n            type=\"number\"\n            @update:value=\"validInput($event, vmImageSize); canAuthenticate()\"\n            :status=\"vmImageSize.status\"\n            :tooltip=\"vmImageSize.tooltip\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-10\" style=\"align-items: center;\"> <!-- Network Select / Boot Configuration -->\n        <div class=\"col span-6\"> <!-- Network Select -->\n          <LabeledSelect\n            v-model:value=\"networks.selected\"\n            labelKey=\"driver.nutanix.config.component.vmNetwork.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.vmNetwork.placeholder`)\"\n            :taggable=\"true\"\n            :multiple=\"true\"\n            :options=\"networks.options\"\n            :disabled=\"!networks.enabled || mybusy\"\n            :loading=\"networks.busy\"\n            :searchable=\"true\"\n            :required=\"true\"\n            @update:value=\"labelSelectAddWrongTag($event, networks); filterNetworks(); canAuthenticate()\"\n          />\n        </div>\n        <div class=\"col span-6\" style=\"padding-left: 10px;\"> <!-- Boot Configuration -->\n          <div class=\"nutanix-config\"> <!-- Boot Configuration title -->\n            <div class=\"title\">\n              {{ t('driver.nutanix.config.title.bootType') }}\n            </div>\n          </div>\n          <RadioGroup\n            name=\"bootConfiguration\"\n            :options='[\"Legacy\", \"UEFI\"]'\n            :row=\"true\"\n            :value=\"bootType\"\n            @update:value=\"bootType = $event\"\n            :disabled=\"mybusy\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-10\"> <!-- VM Categories -->\n        <div class=\"col span-12\">\n          <LabeledSelect\n            v-model:value=\"vmCategories.selected\"\n            labelKey=\"driver.nutanix.config.component.vmCategories.label\"\n            :placeholder=\"t(`driver.nutanix.config.component.vmCategories.placeholder`)\"\n            :taggable=\"true\"\n            :multiple=\"true\"\n            :options=\"vmCategories.options\"\n            :disabled=\"!vmCategories.enabled || mybusy\"\n            :loading=\"vmCategories.busy\"\n            @selecting=\"labelSelectAddWrongTag($event, vmCategories)\"\n          />\n        </div>\n      </div>\n      <!-- vmSerialPort -->\n      <Checkbox\n        val\n        :value=\"vmSerialPort\"\n        :valueWhenTrue=\"true\"\n        labelKey=\"driver.nutanix.config.component.vmSerialPort.label\"\n        style=\"margin-top: 5px;\"\n        @update:value=\"vmSerialPort = !vmSerialPort;\"\n        :disabled=\"mybusy\"\n      />\n      <!-- Collapse Additional Disk Size  /  Storage Container -->\n      <Collapse\n        :open=\"is_SC_colapse\"\n        :title=\"t(`driver.nutanix.config.title.collapseAdditionalDisk`)\"\n        @update:open=\"is_SC_colapse = !is_SC_colapse\"\n      >\n      <div>\n        <div class=\"row\"> <!-- Additional Disk Size  /  Storage Container -->\n          <div class=\"col span-6\">\n            <UnitInput\n              :value=\"additionalDiskSize.selected\"\n              labelKey=\"driver.nutanix.config.component.diskSize.label\"\n              :suffix=\"t(`driver.nutanix.config.component.diskSize.suffix`)\"\n              type=\"number\"\n              :disabled=\"!additionalDiskSize.enabled || mybusy\"\n              :loading=\"additionalDiskSize.busy\"\n              @update:value=\"dynamicStorageContainer($event); canAuthenticate()\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledSelect\n              v-model:value=\"storageContainer.selected\"\n              labelKey=\"driver.nutanix.config.component.storageContainer.label\"\n              :placeholder=\"t(`driver.nutanix.config.component.storageContainer.placeholder`)\"\n              :options=\"storageContainer.options\"\n              :disabled=\"!additionalDiskSize.selected || !storageContainer.enabled || mybusy\"\n              :loading=\"storageContainer.busy\"\n              :searchable=\"false\"\n              @update:value=\"canAuthenticate()\"\n            />\n          </div>\n        </div>\n      </div>\n      </Collapse>\n      <hr class=\"mt-10\">\n      <div class=\"nutanix-config\"> <!-- Cloud-init title -->\n        <div class=\"title\">\n          {{ t('driver.nutanix.config.title.cloudInit') }}\n        </div>\n      </div>\n      <div class=\"row mt-10\"> <!-- Cloud Init Config YAML -->\n        <div class=\"col span-12\">\n        <CodeMirror\n          style=\"background: #f5f5f5;\"\n          mode=\"edit\"\n          minHeight=5\n          :value=cloudInit\n          :options=\"mybusy ? {readOnly:true, cursorBlinkRate:-1} : {readOnly: false}\"\n          :asTextArea=\"false\"\n          @onInput=\"cloudInit = $event\"\n        />\n        </div>\n      </div>\n    </div>\n    <div v-if=\"errors.length\">\n        <div\n          v-for=\"(err, idx) in errors\"\n          :key=\"idx\"\n        >\n          <Banner\n            color=\"error\"\n            :label=\"stringify(err)\"\n          />\n        </div>\n    </div>\n  </div>\n</template>\n<style scoped lang=\"scss\">\n  .file-button {\n    align-items: center;\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: 100%;\n    display: flex;\n\n    > .file-selector {\n      height: calc($input-height - 2px);\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n\n  .nutanix-config {\n    display: flex;\n    align-items: center;\n\n    > .title {\n      font-weight: bold;\n      padding: 4px 0;\n    }\n\n    > .loading {\n      margin-left: 20px;\n      display: flex;\n      align-items: center;\n\n      > i {\n        margin-right: 4px;;\n      }\n    }\n  }\n</style>\n\n\n","import { render } from \"./nutanix.vue?vue&type=template&id=62e2adb9&scoped=true\"\nimport script from \"./nutanix.vue?vue&type=script&lang=js\"\nexport * from \"./nutanix.vue?vue&type=script&lang=js\"\n\nimport \"./nutanix.vue?vue&type=style&index=0&id=62e2adb9&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-62e2adb9\"]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./nutanix.vue?vue&type=style&index=0&id=62e2adb9&scoped=true&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"12f2af15\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".file-button[data-v-62e2adb9]{align-items:center;position:absolute;top:0;right:0;height:100%;display:flex}.file-button>.file-selector[data-v-62e2adb9]{height:59px;border-top-left-radius:0;border-bottom-left-radius:0}.nutanix-config[data-v-62e2adb9]{display:flex;align-items:center}.nutanix-config>.title[data-v-62e2adb9]{font-weight:700;padding:4px 0}.nutanix-config>.loading[data-v-62e2adb9]{margin-left:20px;display:flex;align-items:center}.nutanix-config>.loading>i[data-v-62e2adb9]{margin-right:4px}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Nutanix","constructor","$store","obj","_defineProperty","nutanixcredentialConfig","forEach","key","this","credentialID","$dispatch","dispatch","testConnection","baseUrl","endpoint","port","url","headers","Accept","btoa","username","password","res","method","redirectUnauthorized","root","_status","error","console","getClusterList","value","initial","getOptions","api","field","filter","cluster","config","hypervisorTypes","includes","getImages","getNetwork","mapper","async","vpc","network","subnetType","getVpc","vpcReference","data","undefined","baseName","name","clusterReference","clusterReferenceId","isExternal","makeComputeRequest","getStorageContainer","storage","clusterExtId","getCategories","categorie","getProjectsName","project","spec","constructTotalResponse","apiPath","initialDataLength","total","pageCount","Math","ceil","i","nextPageResponse","push","constructProjectTotalResponse","entities","options","busy","enabled","selected","isArray","metadata","total_matches","length","totalAvailableResults","list","k","Promise","all","convertToOptions","unique","index","findIndex","duplicates","found","find","option","JSON","stringify","sorted","sort","a","b","localeCompare","p","label","class","style","_createElementBlock","_ctx","$fetchState","pending","_createBlock","_component_Loading","delayed","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","t","authenticating","ready","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createVNode","_component_LabeledSelect","projectName","$event","$options","dynamicProjectName","canAuthenticate","labelKey","placeholder","disabled","mybusy","loading","searchable","_hoisted_8","clusters","setClusterReferenceId","required","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_component_UnitInput","vmCpus","suffix","type","min","max","_cache","validInput","status","tooltip","_component_Checkbox","vmCpuPassthrough","valueWhenTrue","_hoisted_13","vmCores","_hoisted_14","vmMem","_hoisted_15","_hoisted_16","vmImage","dynamicVmImageSize","_hoisted_17","vmImageSize","_hoisted_18","_hoisted_19","networks","labelSelectAddWrongTag","filterNetworks","taggable","multiple","_hoisted_20","_hoisted_21","_hoisted_22","_component_RadioGroup","row","bootType","_hoisted_23","_hoisted_24","vmCategories","onSelecting","val","vmSerialPort","_component_Collapse","open","is_SC_colapse","title","_hoisted_25","_hoisted_26","additionalDiskSize","dynamicStorageContainer","_hoisted_27","storageContainer","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_component_CodeMirror","mode","minHeight","cloudInit","readOnly","cursorBlinkRate","asTextArea","onOnInput","errors","_hoisted_32","_Fragment","_renderList","err","idx","_component_Banner","color","initOptions","init","baseOption","initUnitOptions","_min","_max","components","Banner","Loading","KeyValue","LabeledSelect","UnitInput","CodeMirror","Collapse","Checkbox","RadioGroup","mixins","CreateEditView","props","uuid","String","default","credentialId","Boolean","provider","emits","fetch","$emit","_CREATE","initAuthentication","vmNetwork","extId","diskSize","containerExtId","_VIEW","InitData","watch","$fetch","newVal","oldVal","c","uniqueNetworks","_","uniq","computed","methods","credential","NORMAN","CLOUD_CREDENTIAL","replace","secret","SECRET","atob","havePassword","os","setConfiguration","getters","clusterName","then","imageName","networkIdList","resources","subnet_reference_list","clusterReferenceIdList","cluster_reference_list","object","sizeBytes","selectedNetwork","isAdvancedNetworking","component","syncValue","toString","toLowerCase","test","__exports__","render","content","__esModule","locals","add","___CSS_LOADER_EXPORT___"],"sourceRoot":""}